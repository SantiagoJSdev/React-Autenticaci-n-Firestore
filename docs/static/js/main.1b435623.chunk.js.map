{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/uiLoading.js","helpers/fileUpload.js","helpers/loadNotas.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/uiError.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authRducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","gooogleAuthProvider","auth","GoogleAuthProvider","types","finishLoading","type","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","clouResp","secure_url","loadNotas","id","collection","get","notesSnap","notas","forEach","snapHijo","push","data","addNewNote","nota","payload","notesAction","notesLoad","startSaveNote","note","dispatch","getState","uid","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","ui","useSelector","state","useDispatch","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","loading","onClick","signInWithPopup","src","alt","to","uiError","err","RegisterScreen","password2","isFormVlaid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","msgError","AuthRouter","exact","path","component","JournalEntry","date","noteData","moment","style","backgroundSize","backgroundImage","format","JournalEntries","notes","map","Sidebar","signOut","NewNote","Date","getTime","add","NotesAppBar","active","display","files","activeNote","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setchecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1b435623.chunk.js","sourcesContent":["\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDuzHEWNKnSMLzAc1F2TfC-UzPoAy9-370\",\r\n    authDomain: \"react-app-cursos-a6596.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-a6596\",\r\n    storageBucket: \"react-app-cursos-a6596.appspot.com\",\r\n    messagingSenderId: \"811013699333\",\r\n    appId: \"1:811013699333:web:6387256751673c0a87a96c\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const gooogleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {\r\n      db,\r\n      gooogleAuthProvider,\r\n      firebase\r\n\r\n  }","\r\nexport const types = {\r\nlogin: '[Auth] login',\r\nlogout: '[Auth] Logout',\r\n\r\nuiSetError: '[UI] Set Error',\r\nuiRemoveError: '[UI] Remove Error',\r\n\r\nuiStartLoading: '[UI] Start loading',\r\nuiFinishLoading: '[UI] Finish loading',\r\n\r\nnotesAddNew: '[Notes] New Note',\r\nnotesActive: '[Notes] Set active note',\r\nnotesLoad:   '[Notes] Load note',\r\nnotesUpdated: '[Notes] Update note',\r\nnotesFileUrl: '[Notes] Update image url',\r\nnotesDelete: '[Notes] Delete note',\r\nnotesLogoutCleaning: '[Notes] Logout Cleaning'\r\n\r\n}","\r\n// startLoading y finishLoading\r\n\r\nimport { types } from \"../types/types\"\r\n\r\nexport const startLoading = ()=>{\r\n\r\n    return {\r\n        type: types.uiStartLoading,\r\n        // payload: true\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const finishLoading = ()=>{\r\n\r\n    return {\r\n        type: types.uiFinishLoading,\r\n        // payload: false\r\n        \r\n    }\r\n\r\n}","\r\n\r\nexport const fileUpload = async (file)=>{\r\n\r\n// nota: este url lo tengo de claudinary y ya lo probe en postman \r\n    const cloudUrl ='https://api.cloudinary.com/v1_1/daklqpkaq/upload'\r\n\r\n        //creo mi form data para pasar pares de valores a claudinery\r\n    const formData = new FormData()\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method:'POST',\r\n            body: formData\r\n        });\r\n        if (resp.ok) {\r\n            const clouResp = await resp.json()\r\n            return clouResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\n//cree un helpers para extraer un arreglo de la base de datos con todas las notas de un user\r\nexport const loadNotas = async(id) => {\r\n\r\n    const notesSnap =  await db.collection(`${id}/journal/notes`).get()\r\n\r\n   const notas = []\r\n\r\n   notesSnap.forEach((snapHijo)=>{\r\n\r\n    \r\n    notas.push({\r\n        id:  snapHijo.id,\r\n        ...snapHijo.data()\r\n    })\r\n   })\r\n\r\n \r\n   return notas \r\n}\r\n","import Swal from \"sweetalert2\"\r\n\r\nimport { db } from \"../firebase/firebaseConfig\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotas } from \"../helpers/loadNotas\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const notes = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n        const NewNote = {\r\n            title:'',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        }\r\n       \r\n      const doc =  await db.collection(`${uid}/journal/notes`).add(NewNote)\r\n      \r\n\r\n      dispatch(notesAction(doc.id, NewNote))\r\n      dispatch(addNewNote(doc.id, NewNote))\r\n\r\n    }\r\n}\r\n\r\n// cuando se crea la nota ejecute esta accion para que de mi store en el arreglo notes \r\n// agregue mi nota nueva \r\nexport const addNewNote = (id, nota) =>({\r\n        \r\n        type: types.notesAddNew,\r\n        payload: {\r\n            id, ...nota\r\n        }\r\n\r\n\r\n})\r\n\r\n\r\n\r\nexport const notesAction =(id, nota)=>{\r\n        return {\r\n            type: types.notesActive,\r\n            payload: {\r\n                id,\r\n                ...nota\r\n            }\r\n        }\r\n}\r\n\r\n\r\n//aqui extraigo las notas y llamo mi dispatch para cargar mi notas en el store\r\nexport const startLoadingNotes =  (uid) =>{\r\n\r\n    return async(dispatch)=> {\r\n\r\n        const notas = await loadNotas(uid)\r\n        \r\n        dispatch(notesLoad(notas))\r\n    }\r\n\r\n\r\n\r\n \r\n}\r\n\r\n//para cargar en mi store el array notas\r\nexport const notesLoad = (notas) =>{\r\n\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notas\r\n        \r\n    }\r\n}\r\n\r\n//guardar o actualizar la nota\r\n\r\nexport const startSaveNote = (note) =>{\r\n\r\n    return async(dispatch, getState) =>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        //pregunto si en mi nota tengo url porq si es undefine va dar error en firestore\r\n        //y como la nota no puede poseer imagen no tiene url y da undefine\r\n        if (!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore))\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => {\r\n\r\n  return  {  \r\n      type: types.notesUpdated,\r\n      payload: {\r\n                 id, \r\n                 note: {\r\n                     id,\r\n                     ...note\r\n                 }\r\n                 \r\n             }\r\n\r\n}\r\n}\r\n\r\n\r\n//esta accion es para subir mi imagen a claudinery ya previo en mis pantalla notesAppBar creo mis funciones \r\n// para subir el archivo y mediante el target asignarla en una variable ahora creare un helper para subirla a claudinery\r\n// y luego ejecutarla en esta accion para no tener codigo tan largo\r\nexport const startUploading = (file)=>{\r\n\r\n    return async (dispatch, getState)=>{\r\n\r\n        const {active: activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n            // aqui retorno la direccion de mi imagen y la tengo en la variable\r\n        const fileUrl = await fileUpload(file)\r\n        \r\n        // ahora debo grabar en mi accion en la nota mi url porq ya la nota tiene imagen pero ya tengo una accion\r\n        // que guarda o actualiza la nota \r\n\r\n        activeNote.url = fileUrl\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const deleteNote =(id) =>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogaut= ()=>({\r\n    type: types.notesLogoutCleaning\r\n   \r\n\r\n})","import Swal from 'sweetalert2'\r\nimport { types } from \"../types/types\"\r\nimport {firebase, gooogleAuthProvider} from \"../firebase/firebaseConfig\";\r\nimport { finishLoading, startLoading } from \"./uiLoading\";\r\nimport { noteLogaut } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n\r\n    return (dispatch) => {\r\n            dispatch(startLoading())\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(({user})=>{\r\n           \r\n            dispatch(login(user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n\r\n        }).catch(e=>{\r\n            console.log(e)\r\n            dispatch(finishLoading())\r\n            Swal.fire('Error', e.message, 'error');\r\n\r\n        })\r\n            \r\n       \r\n           \r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName =(email,password,name)=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then( async({user}) =>{\r\n            \r\n           await user.updateProfile({displayName:name})\r\n           \r\n            dispatch(login(user.uid, user.displayName))\r\n        }).catch( e => {\r\n            console.log(e);\r\n           \r\n            Swal.fire('Error', e.message, 'error');\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const startGoogleLogin =()=>{\r\n\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithPopup(gooogleAuthProvider)\r\n        .then(({user} )=>{\r\n            dispatch(login(user.uid, user.displayName))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const login =(uid, displayName) =>{\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async(dispatch)=>{\r\n      await  firebase.auth().signOut()\r\n\r\n      dispatch(logout())\r\n      dispatch(noteLogaut())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n\r\n  \r\n    type: types.logout\r\n\r\n   \r\n})","\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    //nota: mi reset recibe un nuevo estado como para refrescar \r\n    //mi useForm y muestre la informacion del nuevo estado ya que como \r\n    //mantiene su propio estado donde lo uso me da problema\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const {ui} = useSelector(state=>state)\n\n    \n    const dispatch = useDispatch();\n\n\n    const [ formValues, handleInputChange ] = useForm( {\n        email: '',\n        password: ''\n    } );\n\n    const {email, password} = formValues;\n\n    const handleLogin =(e)=>{\n        e.preventDefault()\n   \n        dispatch(startLoginEmailPassword(email, password))\n\n    }\n\n    const handleGoogleLogin = ()=> {\n        dispatch(startGoogleLogin())\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n            className = \"animate__animated animate__fadeIn\"\n            onSubmit = {handleLogin}>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ ui.loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiError  =(err) =>{\r\n\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const uiRemoveError  =() =>{\r\n\r\n    return {\r\n        type: types.uiRemoveError\r\n        \r\n    }\r\n}","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiError, uiRemoveError } from '../../actions/uiError';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const state = useSelector(state=>state)\n\n    // console.log(state.ui.msgError)\n    const dispatch = useDispatch();\n\nconst [values, handleInputChange] = useForm({\n    name:'hernando',\n    email: 'hernando@gmail.com',\n    password: '123456',\n    password2:'123456'\n})\n\nconst {name, email, password,password2} = values;\n\n\nconst handleRegister = (e) =>{\n\n    e.preventDefault()\n    if (isFormVlaid()) {\n      dispatch(startRegisterWithEmailPasswordName(email,password,name))  \n    }\n    \n}\n\nconst isFormVlaid =()=>{\n\n        if (name.trim().length === 0) {\n            dispatch(uiError('name requerido'))\n            \n            return false\n        } else if ( !validator.isEmail(email)){\n            dispatch(uiError('email requerido'))\n            \n            return false\n        } else if (password !== password2 || password.length <5){ \n        dispatch(uiError('Verifique password '))\n        \n        return false\n        }\n        dispatch(uiRemoveError())\n        return true\n\n}\n\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form\n             className = \"animate__animated animate__fadeIn\"\n            onSubmit={handleRegister}>\n        {\n                   state.ui.msgError && (     \n                       \n                    <div className='auth__alert-error'>\n                            {state.ui.msgError}\n                        </div> \n                    )\n        }\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange ={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange ={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={password}\n                    onChange ={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={password2}\n                    onChange ={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nimport moment  from 'moment'\nimport { useDispatch } from 'react-redux'\nimport { notesAction } from '../../actions/notes'\n\nexport const JournalEntry = ({id, date, title, body, url}) => {\n\n    const noteData = moment(date)\n    const dispatch = useDispatch();\n\nconst handleEntryClick =()=>{\n    const nota = {date, title, body, url}\n    dispatch(notesAction(id, nota))\n}\n\n    \n    return (\n        <div \n        onClick={handleEntryClick}\n        className=\"journal__entry pointer animate__animated animate__fadeIn\">\n            \n            {\n                url &&\n                <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: `url(${ url })`\n                }}\n            ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteData.format('dddd')}</span>\n                <h4>{noteData.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector( state => state.notes );\n    \n\n\n    return (\n        <div className=\"journal__entries \">\n            \n            {\n                notes.map( nota => (\n                    <JournalEntry key={ nota.id }\n                    { ...nota}\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { notes } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector( state => state.auth );\n  \nconst hanleLogout =()=>{\n  dispatch(startLogout())  \n\n  \n  }\n  const handleAddNew =()=>{\n\n  dispatch(notes())\n}\n\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button \n                className=\"btn\"\n                onClick={hanleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div \n            className=\"journal__new-entry\"\n            onClick={handleAddNew}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const {active} = useSelector( state => state.notes );\n\nconst handleSave=()=>{\n    dispatch(startSaveNote(active))\n}\n\n    const handlePictureClick =()=>{\n\n        // llame a mi referencia por id y simulo mi evento click creo en mi input\n        // mi onchange y creo mi funcion para que la ejecute \n        document.querySelector('#fileSelector').click()\n\n\n    }\n\n    // mediante el evento change busco en el target.files donde esta mi archivo el cual necesito \n    // pasar para claudinery\n    const handleFileChange= (e)=>{\n       const file = e.target.files[0];\n\n       if (file){\n\n        //este dispach le paso el file y extrae el url de la imagen que mande a subir \n        dispatch(startUploading(file))\n       }\n    }\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            {/* creo un input para almacenar mis archivos creo tipo file para eso \n            y display none para que no se vea xq lo voy a ejecutar mediante mi boton \n            le coloco un id para poder llamarlo*/}\n            <input\n            id='fileSelector'\n            type='file'\n            style={{display:'none'}}\n            onChange={handleFileChange}\n            />\n\n            <div>\n                <button\n                 className=\"btn\"\n                 onClick={handlePictureClick}\n                 >\n                    Picture\n                </button>\n\n                <button \n                onClick={handleSave}\n                className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { notesAction, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\nconst {active: note} = useSelector( state => state.notes );\n\nconst [formValues, handleInputChange, reset] = useForm(note);\n\n\nconst {title, body, id} = formValues;\n\n//llamo a la referencia de mi nota.id para obtener el id o la nota\n//seleccionada asi puedo establecer una condicion preguntar if \n//el id de la nota es diferente al de la actual\nconst activeId = useRef(note.id)\n\nuseEffect(() => {\n   \n    if (note.id !== activeId.current) {\n\n        reset(note)\n\n        activeId.current = note.id\n\n    }\n\n\n},[note, reset] )\n\nuseEffect(() => {\n\n//nota aqui se va actualizando mi action mi nota en el store\n//mi body y mi title del formulario\n    dispatch(notesAction(formValues.id, {...formValues}))\n   \n}, [formValues, dispatch])\n\n    const handleDelete=()=>{\n\n        dispatch(startDeleting(id))\n    }\n\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n                {\n                   ( note.url) && (\n                <div className=\"notes__image\">\n                    <img \n                        src={ note.url}\n                        alt=\"imagen\"\n                    />\n                </div>)\n\n                }\n            </div>\n                <button\n                className='btn btn-danger'\n                onClick={handleDelete}\n                >Delete</button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const {active} = useSelector( state => state.notes );\n    \n    return (\n        <div className=\"journal__main-content  animate__animated animate__fadeIn\">\n            \n            <Sidebar />\n\n\n            <main>\n               {  (active)\n               ? <NoteScreen />\n                : <NothingSelected />\n                   \n                \n    }\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n   \n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    \n    Redirect\n  } from 'react-router-dom';\n\n  import { firebase } from \"../firebase/firebaseConfig\";\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    // const state = useSelector( state => state );\n    // console.log(state)\n        //Nota:  creo un estado para saber colocar loading en la pagina mienstras comprueba el user\n    const [checking, setchecking] = useState(true)\n\n        //Nota:  creo un estado para saber identificar usuario activo\n    const [isLoggedIn, setisLoggedIn] = useState(false)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        //nota: creo un observador del user asi si esta autenticado en la pagina\n        //lo cargo en el store sino no esta logueado y lo envia a la ruta del login\n\n        firebase.auth().onAuthStateChanged(  user=>{\n\n           \n\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName))\n                setisLoggedIn(true)\n\n               dispatch(startLoadingNotes(user.uid)) \n            //   const notas = await loadNotas(user.uid)\n            //   dispatch(notesLoad(notas))\n            } else {\n            setisLoggedIn(false)\n            }\n            setchecking(false)\n            })\n           \n        \n    }, [dispatch, setchecking, setisLoggedIn])\n\n    if (checking) {\n\n        return (\n        <h1>Loading</h1>\n        )\n    }\n    \n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n\r\n        loading: false,\r\n        msgError: null\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n                \r\n            }\r\n            case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n            case types.uiStartLoading:\r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n\r\n                }\r\n\r\n                case types.uiFinishLoading:\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n\r\n                }\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    notes:[],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n   \r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n\r\n        return {\r\n            ...state,\r\n            active: action.payload\r\n        }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        case types.notesLoad:\r\n            \r\n\r\n        return {\r\n            ...state,\r\n            notes: [ ...action.payload]\r\n        }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note=> note.id === action.payload.id \r\n                                            ? action.payload.note\r\n                                            : note\r\n                    )\r\n            }\r\n\r\n            case types.notesDelete:\r\n                return {\r\n                    ...state,\r\n                    active: null,\r\n                    notes: state.notes.filter(note=>note.id !== action.payload)\r\n                }\r\n                \r\n                case types.notesLogoutCleaning:\r\n                    return {\r\n                        ...state,\r\n                        notes: [],\r\n                        active: null\r\n                    }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport { authRducer } from '../reducers/authRducer'\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authRducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n    \r\n\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers, \r\n    composeEnhancers(applyMiddleware(thunk)) \r\n    \r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    \r\n    )","\r\n\r\nimport { types } from '../types/types';\r\n\r\nexport const authRducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n        }\r\n        case types.logout:\r\n            return {\r\n               \r\n        }\r\n          \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n","import React from 'react'\r\n\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n            <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\nReactDOM.render(\n  <JournalApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}